// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  departmentId  String
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")

  requestFlows Workflow[] @relation("RequestedBy")
  approveFlows Workflow[] @relation("ApprovedBy")
  Payment      Payment[]
  department   Department @relation(fields: [departmentId], references: [id], onDelete: Cascade)

  @@map(name: "Users")
}

model Department {
  id   String  @id @default(cuid())
  name String?
  User User[]

  @@map(name: "Departments")
}

model Payment {
  id             String   @id @default(cuid())
  amount         Int
  item           String
  provider       String
  paymentDate    DateTime
  userInChargeId String
  updatedAt      DateTime @default(now()) @map(name: "created_at")
  createdAt      DateTime @updatedAt @map(name: "updated_at")

  userInCharge User       @relation(fields: [userInChargeId], references: [id])
  Workflow     Workflow[]

  @@map(name: "Payments")
}

model Workflow {
  id            String    @id @default(uuid())
  paymentId     String
  requestedById String
  status        String
  approvedById  String
  approvalDate  DateTime?
  type          String
  typeIcon      String
  note          String?

  requestedBy User    @relation("RequestedBy", fields: [requestedById], references: [id])
  approvedBy  User    @relation("ApprovedBy", fields: [approvedById], references: [id])
  payment     Payment @relation(fields: [paymentId], references: [id])

  @@map(name: "Workflows")
}
